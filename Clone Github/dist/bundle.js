(()=>{"use strict";const e=new class{constructor(e,s){this.client_id=e,this.client_secret=s,this.repos_count=10,this.repos_sort="created: asc"}async fetchUser(e){const s=await fetch(`http://api.github.com/users/${e}?client_id=${this.client_id}&client_secret${this.client_secret}`),n=await fetch(`http://api.github.com/users/${e}/repos?per_page=${this.repos_count}&sort=${this.repos_sort}&client_id=${this.client_id}&client_secret=${this.client_secret}`);return{userData:await s.json(),repositories:await n.json()}}}("1def8ba4b4573179b037","47c24aae84e003b16114ce10ca3778f798bbc835"),s=new class{constructor(){this.profile=document.getElementById("profile")}showProfile(e){console.log(e),this.profile.innerHTML=`\n            <div class="card mt mt-2 animate__animated animate__bounceInLeft">\n                <img src="${e.avatar_url}" class="card-img-top">\n                <div class="card-body">\n                    <h3 class="card-title">${e.name} / ${e.login}</h3>\n                    <a href="${e.html_url}" class="btn btn-primary btn-block" target="_blank">View Profile</a>\n                    <span class="badge bg-success">\n                        Followers: ${e.followers}\n                    </span>\n                    <span class="badge bg-primary">\n                        Following: ${e.following}\n                    </span>\n                    <span class="badge bg-warning">\n                        Company: ${e.company}\n                    </span>\n                    <span class="badge bg-info" d-block>\n                        Blog: ${e.blog}\n                    </span>\n                </div>\n            </div>\n        `}showMessages(e,s){const n=document.createElement("div");n.className=s,n.appendChild(document.createTextNode(e));const t=document.querySelector(".row"),a=document.querySelector("#profile");t.insertBefore(n,a)}clearMessage(){const e=document.querySelector(".alert");e&&e.remove()}showRepositories(e){console.log(e);let s="";e.forEach((e=>{s+=`\n            <div class="card card-body mt-2 animate__animated animate__bounceInUp">\n              <div class="row">\n                <div class="col-md-6">\n                  <a href="${e.html_url}" target="_blank">${e.name}</a>\n                </div>\n                <div class="col-md-6">\n                    <span class="badge bg-primary">\n                      Language: ${e.language}\n                    </span>\n                    <span class="badge bg-success">\n                      forks: ${e.forks_count}\n                    </span>\n                </div>\n              </div>\n            </div>\n          `})),document.getElementById("repositories").innerHTML=s}reset(){this.profile.innerHTML='\n          <div class="container mt5">\n            <h3 class="display-2 text-center">Learn Something New Everydary</h3>\n          </div>\n        '}};document.getElementById("userForm").addEventListener("submit",(n=>{n.preventDefault();const t=document.getElementById("textSearch").value;""!==t?e.fetchUser(t).then((e=>{"Not Found"===e.userData.message?s.showMessages("User Not Found","alert alert-danger col-md-12 mt-2"):(s.showProfile(e.userData),s.showRepositories(e.repositories),s.clearMessage())})):s.reset()}))})();